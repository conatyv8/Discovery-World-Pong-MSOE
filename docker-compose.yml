services:
    mqtt-broker:
        container_name: mqtt-broker
        image: eclipse-mosquitto:2.0.15
        profiles: [dev, prod]
        ports:
            - 1883:1883
            - 8883:8883
            - 9001:9001
        volumes:
            - ./src/mqtt-broker/config:/mosquitto/config
            - ./src/mqtt-broker/data:/mosquitto/data
            - ./src/mqtt-broker/log:/mosquitto/log
        restart: unless-stopped
        networks:
            - pong-network
    mqtt-explorer:
        container_name: mqtt-explorer
        image: smeagolworms4/mqtt-explorer
        profiles: [dev]
        ports:
            - 4000:4000
        volumes:
            - ./development-tools/mqtt-explorer/config:/mqtt-explorer/config
        restart: unless-stopped
        networks:
            - pong-network
    ai-paddle-control:
        container_name: ai-paddle-control
        image: ghcr.io/aaron97neu/ai-paddle-control:${TAG:-next}
        build:
            context: ./src/ai-paddle-control
            additional_contexts:
                util: ./src/shared/code
                validation: ./src/shared/validation
                certs: ./certs
        profiles: [prod]
        restart: unless-stopped
        networks:
            - pong-network
        deploy:
            resources:
                reservations:
                    devices:
                        - driver: nvidia
                          count: 1
                          capabilities: [gpu]
    ai-paddle-control-no-gpu:
        container_name: ai-paddle-control
        build:
            context: ./src/ai-paddle-control
            additional_contexts:
                util: ./src/shared/code
                validation: ./src/shared/validation
                certs: ./certs
        profiles: [dev]
        restart: unless-stopped
        networks:
            - pong-network
    game-engine:
        container_name: game-engine
        image: ghcr.io/aaron97neu/game-engine:${TAG:-next}
        build:
            context: ./src/game-engine
            additional_contexts:
                util: ./src/shared/code
                certs: ./certs
        profiles: [dev, prod]
        restart: unless-stopped
        networks:
            - pong-network
    human-paddle-control:
        container_name: human-paddle-control
        image: ghcr.io/aaron97neu/human-paddle-control:${TAG:-next}
        build:
            context: ./src/human-paddle-control
            additional_contexts:
                util: ./src/shared/code
                certs: ./certs
        profiles: [dev, prod]
        volumes:
            - /dev:/dev
        device_cgroup_rules:
            - "c 81:* rmw"
            - "c 189:* rmw"
        #       devices:
        #        - "/devices/pci0000:00/0000:00:14.0/usb1/1-8/1-8:1.0/input/input22:/devices/pci0000:00/0000:00:14.0/usb1/1-8/1-8:1.0/input/input22"
        restart: unless-stopped
        networks:
            - pong-network
    human-visualizer:
        container_name: human-visualizer
        image: ghcr.io/aaron97neu/human-visualizer:${TAG:-next}
        build:
            context: ./src/human-visualizer
            additional_contexts:
                util: ./src/shared/code
                certs: ./certs
        profiles: [dev, prod]
        ports:
            - 5001:8000
        #       environment:
        #           - DEBUG=0 # Not used right now
        restart: unless-stopped
        networks:
            - pong-network
    neural-net-visualizer:
        container_name: neural-net-visualizer
        image: ghcr.io/aaron97neu/neural-net-visualizer:${TAG:-next}
        build:
            context: ./src/neural-net-visualizer
            additional_contexts:
                util: ./src/shared/code
                models: ./src/shared/models
                certs: ./certs
        profiles: [dev, prod]
        ports:
            - 5002:8000
        restart: unless-stopped
        networks:
            - pong-network
    clocktower-visualizer:
        container_name: clocktower-visualizer
        image: ghcr.io/aaron97neu/clocktower-visualizer:${TAG:-next}
        build:
            context: ./src/clocktower-visualizer
            additional_contexts:
                models: ./src/shared/models
                certs: ./certs
        profiles: [dev, prod]
        ports:
            - 5003:80
        restart: unless-stopped
        networks:
            - pong-network
    gameboard:
        container_name: gameboard

        image: ghcr.io/aaron97neu/gameboard:${TAG:-next}
        build:
            context: ./src/gameboard
            additional_contexts:
                certs: ./certs
        profiles: [dev, prod]
        ports:
            - 5000:80
        restart: unless-stopped
        networks:
            - pong-network
    audio-engine:
        container_name: audio-engine
        image: ghcr.io/aaron97neu/audio-engine:${TAG:-next}
        build:
            context: ./src/audio-engine
            additional_contexts:
                certs: ./certs
        profiles: [dev, prod]
        # devices:
        #     - "/dev/snd"
        restart: unless-stopped
        networks:
            - pong-network
    single-screen-development:
        container_name: single-screen-development
        image: single-screen-development:latest
        build:
            context: ./src/single-screen-development
            additional_contexts:
                certs: ./certs
        profiles: [dev]
        ports:
            - 5005:80
        restart: unless-stopped
        networks:
            - pong-network
    log-server:
        container_name: log-server
        image: log-server:latest
        build:
            context: ./src/log-server
        profiles: [dev]
        environment:
            - MQTT_BROKER_URL=ws://mqtt-broker:9001
        depends_on:
            - mqtt-broker
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - pong-network
    visual-effects:
        container_name: visual-effects
        image: visual-effects:latest
        build:
            context: ./src/visual-effects
        profiles: [dev, prod]
        ports:
            - 5006:8000
        restart: unless-stopped
        networks:
            - pong-network
networks:
    pong-network:
        name: pong-network
        driver: bridge
